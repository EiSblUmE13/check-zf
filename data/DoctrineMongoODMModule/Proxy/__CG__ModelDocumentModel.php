<?php

namespace DoctrineMongoODMModule\Proxy\__CG__\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class DocumentModel extends \Model\DocumentModel implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array('distance' => NULL, 'publishedOn' => NULL, 'publishedOff' => NULL);



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->distance, $this->publishedOn, $this->publishedOff);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', array($name, $value));

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', array($name));

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'inputFilter', 'dm', 'id', 'distance', 'datecreate', 'publishedOn', 'publishedOff', 'layout', 'path', 'structname', 'inlanguage', 'bgimage', 'structicon', 'documentclass', 'sort', 'visible', 'isdocument', 'sheet', 'coordinates', 'georeverse', 'parent', 'authors', 'owner', 'client', 'token');
        }

        return array('__isInitialized__', 'inputFilter', 'dm', 'id', 'datecreate', 'layout', 'path', 'structname', 'inlanguage', 'bgimage', 'structicon', 'documentclass', 'sort', 'visible', 'isdocument', 'sheet', 'coordinates', 'georeverse', 'parent', 'authors', 'owner', 'client', 'token');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (DocumentModel $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->distance, $this->publishedOn, $this->publishedOff);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function findGeoCoords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'findGeoCoords', array());

        return parent::findGeoCoords();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray($lang = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array($lang));

        return parent::toArray($lang);
    }

    /**
     * {@inheritDoc}
     */
    public function exchangeArray($data, $lang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'exchangeArray', array($data, $lang));

        return parent::exchangeArray($data, $lang);
    }

    /**
     * {@inheritDoc}
     */
    public function setInputFilter(\Zend\InputFilter\InputFilterInterface $inputFilter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInputFilter', array($inputFilter));

        return parent::setInputFilter($inputFilter);
    }

    /**
     * {@inheritDoc}
     */
    public function getInputFilter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInputFilter', array());

        return parent::getInputFilter();
    }

    /**
     * {@inheritDoc}
     */
    public function getChildList(array $options = array (
), $dm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildList', array($options, $dm));

        return parent::getChildList($options, $dm);
    }

    /**
     * {@inheritDoc}
     */
    public function clearLayoutCache($lang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearLayoutCache', array($lang));

        return parent::clearLayoutCache($lang);
    }

    /**
     * {@inheritDoc}
     */
    public function generateUrl($lang = 'de', $parent = NULL, $sheet = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'generateUrl', array($lang, $parent, $sheet));

        return parent::generateUrl($lang, $parent, $sheet);
    }

    /**
     * {@inheritDoc}
     */
    public function hasChildren($dm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasChildren', array($dm));

        return parent::hasChildren($dm);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren($dm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', array($dm));

        return parent::getChildren($dm);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticleWidget($nth, $dm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticleWidget', array($nth, $dm));

        return parent::getArticleWidget($nth, $dm);
    }

    /**
     * {@inheritDoc}
     */
    public function getPages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPages', array());

        return parent::getPages();
    }

    /**
     * {@inheritDoc}
     */
    public function getOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptions', array());

        return parent::getOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributes', array());

        return parent::getAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatecreate($datecreate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatecreate', array($datecreate));

        return parent::setDatecreate($datecreate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatecreate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatecreate', array());

        return parent::getDatecreate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLayout($layout, $lang = 'de')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLayout', array($layout, $lang));

        return parent::setLayout($layout, $lang);
    }

    /**
     * {@inheritDoc}
     */
    public function getLayout($lang = 'de')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLayout', array($lang));

        return parent::getLayout($lang);
    }

    /**
     * {@inheritDoc}
     */
    public function setPath($path, $lang = 'de')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPath', array($path, $lang));

        return parent::setPath($path, $lang);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath($lang = 'de')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', array($lang));

        return parent::getPath($lang);
    }

    /**
     * {@inheritDoc}
     */
    public function setStructname($structname, $lang = 'de')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStructname', array($structname, $lang));

        return parent::setStructname($structname, $lang);
    }

    /**
     * {@inheritDoc}
     */
    public function getStructname($lang = 'de')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStructname', array($lang));

        return parent::getStructname($lang);
    }

    /**
     * {@inheritDoc}
     */
    public function setInlanguage($inlanguage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInlanguage', array($inlanguage));

        return parent::setInlanguage($inlanguage);
    }

    /**
     * {@inheritDoc}
     */
    public function getInlanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInlanguage', array());

        return parent::getInlanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setSort($sort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSort', array($sort));

        return parent::setSort($sort);
    }

    /**
     * {@inheritDoc}
     */
    public function getSort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSort', array());

        return parent::getSort();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisible($visible)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisible', array($visible));

        return parent::setVisible($visible);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisible()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisible', array());

        return parent::getVisible();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\Model\DocumentModel $parent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', array($parent));

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', array());

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', array($token));

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', array());

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setSheet(\Model\DocumentSheetModel $sheet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSheet', array($sheet));

        return parent::setSheet($sheet);
    }

    /**
     * {@inheritDoc}
     */
    public function getSheet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSheet', array());

        return parent::getSheet();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoordinates(\Model\Coordinates $coordinates)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoordinates', array($coordinates));

        return parent::setCoordinates($coordinates);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoordinates()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoordinates', array());

        return parent::getCoordinates();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeoreverse($georeverse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeoreverse', array($georeverse));

        return parent::setGeoreverse($georeverse);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeoreverse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeoreverse', array());

        return parent::getGeoreverse();
    }

    /**
     * {@inheritDoc}
     */
    public function addAuthor(\Model\UserModel $author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAuthor', array($author));

        return parent::addAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAuthor(\Model\UserModel $author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAuthor', array($author));

        return parent::removeAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthors', array());

        return parent::getAuthors();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\Model\UserModel $owner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', array($owner));

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', array());

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsdocument($isdocument)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsdocument', array($isdocument));

        return parent::setIsdocument($isdocument);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsdocument()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsdocument', array());

        return parent::getIsdocument();
    }

    /**
     * {@inheritDoc}
     */
    public function setBgimage($bgimage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBgimage', array($bgimage));

        return parent::setBgimage($bgimage);
    }

    /**
     * {@inheritDoc}
     */
    public function getBgimage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBgimage', array());

        return parent::getBgimage();
    }

    /**
     * {@inheritDoc}
     */
    public function setStructicon($structicon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStructicon', array($structicon));

        return parent::setStructicon($structicon);
    }

    /**
     * {@inheritDoc}
     */
    public function getStructicon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStructicon', array());

        return parent::getStructicon();
    }

    /**
     * {@inheritDoc}
     */
    public function setDocumentclass($documentclass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocumentclass', array($documentclass));

        return parent::setDocumentclass($documentclass);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumentclass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumentclass', array());

        return parent::getDocumentclass();
    }

    /**
     * {@inheritDoc}
     */
    public function setClient(\Model\ClientModel $client)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClient', array($client));

        return parent::setClient($client);
    }

    /**
     * {@inheritDoc}
     */
    public function getClient()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClient', array());

        return parent::getClient();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishedOn($publishedOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishedOn', array($publishedOn));

        return parent::setPublishedOn($publishedOn);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishedOn', array());

        return parent::getPublishedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishedOff($publishedOff = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishedOff', array($publishedOff));

        return parent::setPublishedOff($publishedOff);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishedOff()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishedOff', array());

        return parent::getPublishedOff();
    }

    /**
     * {@inheritDoc}
     */
    public function setDistance($distance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDistance', array($distance));

        return parent::setDistance($distance);
    }

    /**
     * {@inheritDoc}
     */
    public function getDistance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDistance', array());

        return parent::getDistance();
    }

}
