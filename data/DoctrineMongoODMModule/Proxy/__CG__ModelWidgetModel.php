<?php

namespace DoctrineMongoODMModule\Proxy\__CG__\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class WidgetModel extends \Model\WidgetModel implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'inputFilter', 'id', 'datecreate', 'dateupdate', 'datestart', 'datestop', 'anker', 'type', 'path', 'attributes', 'inlanguage', 'draft', 'sort', 'editmode', 'parent', 'coordinates', 'author', 'georeverse', 'token');
        }

        return array('__isInitialized__', 'inputFilter', 'id', 'datecreate', 'dateupdate', 'datestart', 'datestop', 'anker', 'type', 'path', 'attributes', 'inlanguage', 'draft', 'sort', 'editmode', 'parent', 'coordinates', 'author', 'georeverse', 'token');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (WidgetModel $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function exchangeArray($data, $lang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'exchangeArray', array($data, $lang));

        return parent::exchangeArray($data, $lang);
    }

    /**
     * {@inheritDoc}
     */
    public function setInputFilter(\Zend\InputFilter\InputFilterInterface $inputFilter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInputFilter', array($inputFilter));

        return parent::setInputFilter($inputFilter);
    }

    /**
     * {@inheritDoc}
     */
    public function getInputFilter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInputFilter', array());

        return parent::getInputFilter();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatecreate($datecreate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatecreate', array($datecreate));

        return parent::setDatecreate($datecreate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatecreate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatecreate', array());

        return parent::getDatecreate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateupdate($dateupdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateupdate', array($dateupdate));

        return parent::setDateupdate($dateupdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateupdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateupdate', array());

        return parent::getDateupdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatestart($datestart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatestart', array($datestart));

        return parent::setDatestart($datestart);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatestart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatestart', array());

        return parent::getDatestart();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatestop($datestop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatestop', array($datestop));

        return parent::setDatestop($datestop);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatestop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatestop', array());

        return parent::getDatestop();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnker($anker)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnker', array($anker));

        return parent::setAnker($anker);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnker()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnker', array());

        return parent::getAnker();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setPath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPath', array($path));

        return parent::setPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', array());

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttributes($attributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttributes', array($attributes));

        return parent::setAttributes($attributes);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributes', array());

        return parent::getAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function setInlanguage($inlanguage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInlanguage', array($inlanguage));

        return parent::setInlanguage($inlanguage);
    }

    /**
     * {@inheritDoc}
     */
    public function getInlanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInlanguage', array());

        return parent::getInlanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setDraft($draft)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDraft', array($draft));

        return parent::setDraft($draft);
    }

    /**
     * {@inheritDoc}
     */
    public function getDraft()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDraft', array());

        return parent::getDraft();
    }

    /**
     * {@inheritDoc}
     */
    public function setSort($sort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSort', array($sort));

        return parent::setSort($sort);
    }

    /**
     * {@inheritDoc}
     */
    public function getSort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSort', array());

        return parent::getSort();
    }

    /**
     * {@inheritDoc}
     */
    public function setEditmode($editmode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEditmode', array($editmode));

        return parent::setEditmode($editmode);
    }

    /**
     * {@inheritDoc}
     */
    public function getEditmode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEditmode', array());

        return parent::getEditmode();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\Model\DocumentModel $parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', array($parent));

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', array());

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoordinates(\Model\Coordinates $coordinates)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoordinates', array($coordinates));

        return parent::setCoordinates($coordinates);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoordinates()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoordinates', array());

        return parent::getCoordinates();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeoreverse($georeverse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeoreverse', array($georeverse));

        return parent::setGeoreverse($georeverse);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeoreverse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeoreverse', array());

        return parent::getGeoreverse();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', array($token));

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', array());

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor(\Model\UserModel $author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', array($author));

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', array());

        return parent::getAuthor();
    }

}
